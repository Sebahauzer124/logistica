<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <title>PLANILLA DE RENDICIÓN</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
  <link rel="stylesheet" href="styles.css">
</head>

<body>
  <div class="container">
    <h1 class="my-4">PLANILLA DE RENDICION</h1>
    <form action="/submit" method="post">
      <div class="form-group">
        <label for="date">Fecha:</label>
        <input type="date" class="form-control" id="date" name="date" required>
      </div>
      <div class="form-group">
        <label for="chofer1">Seleccionar Chofer 1:</label>
        <select name="chofer1" id="chofer1">
          {{#each choferes}}
          <option value="{{this.name}}">
            {{this.name}} - {{this.type}}
          </option>
          {{/each}}
        </select>
      </div>

      <div class="form-group">
        <label for="chofer2">Seleccionar Chofer 2:</label>
        <select name="chofer2" id="chofer2">
          {{#each choferes}}
          <option value="{{this.name}}">
            {{this.name}} - {{this.type}}
          </option>
          {{/each}}
        </select>
      </div>

      <div class="form-group">
        <label for="chofer3">Seleccionar Chofer 3:</label>
        <select name="chofer3" id="chofer3">
          {{#each choferes}}
          <option value="{{this.name}}">
            {{this.name}} - {{this.type}}
          </option>
          {{/each}}
        </select>
      </div>


   
      <div class="form-group">
        <label for="totalManual">Monto Contado</label>
        <input type="number" class="form-control" id="totalManual" name="totalManual" step="any" oninput="calcularDiferencia()"
          required>
      </div>
         <div class="form-group">
        <label for="total">Total a Rendir:</label>
        <input type="number" class="form-control" id="total" name="total"  step="any" readonly>
      </div>
      <div class="form-group">
    <label for="totalValores">Total valores:</label>
    <input type="number" class="form-control" id="totalValores" name="totalValores" step="any" readonly>
</div>


      <div class="form-group">
        <label for="diferencia">Diferencia:</label>
        <input type="number" class="form-control" id="diferencia" name="diferencia" step="any" readonly>
      </div>
      <fieldset>
        <legend>Venta de envases</legend>
        <table class="table" id="envasesTable">
          <thead>
            <tr>
              <th>Producto</th>
              <th>Precio</th>
              <th>Cantidad</th>
              <th>Importe Total</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            <tr class="envase-row">
              

              <td>
                <select name="envases[0][product]" class="form-control product">
                  <option value="2730-Q PILAS 1/3" data-price="10000">2730-Q PILAS 1/3</option>
                  <option value="2731-Q CERVEZAS 1/1" data-price="25600.01">2731-Q CERVEZAS 1/1</option>
                  <option value="2754-ENV BARR 20L" data-price="30728.52">2754-ENV BARR 20L</option>
                  <option value="2755-ENV BARR 50L VACIO" data-price="51214.19">2755-ENV BARR 50L VACIO</option>
                  <option value="2776 BOT 1/1 ARACELI 1000CC" data-price="1200">2776 BOT 1/1 ARACELI 1000CC </option>
                  <option value="2780-BOT AMBAR 340 RET" data-price="400">2780-BOT AMBAR 340 RET</option>
                  <option value="5192 BOT 2L RECO X 8" data-price="101">5192 BOT 2L RECO </option>
                </select>
              </td>
              <td>
                <input type="number" name="envases[0][price]" class="form-control price" value="10000" readonly>
              </td>
              <td>
                <input type="number" name="envases[0][quantity]" class="form-control quantity">
              </td>
              <td>
                <input type="number" name="envases[0][total]" class="form-control total" readonly>
              </td>
              <td>
                <button type="button" class="btn btn-danger delete-row">Eliminar</button>
              </td>
            </tr>
          </tbody>
        </table>
        <button type="button" class="btn btn-primary addRow" data-table="envasesTable">Agregar compra de
          envases</button>
      </fieldset>

      <!-- Roturas -->
      <fieldset>
        <legend>Roturas</legend>
        <table class="table" id="breaksTable">
          <thead>
            <tr>
              <th>PDV</th>
              <th>Producto</th>
              <th>Cantidad</th>
              <th>Importe Total por Rotura</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
           <tr class="break-row">
  <td>
    <select name="breaks[0][pdv]" id="breaks-pdv" class="select2">
      {{#each clientes}}
      <option value="{{this.displayName}}">
        {{this.codigo}} - {{this.razonSocial}}
      </option>
      {{/each}}
    </select>
  </td>
  <td><input type="text" name="breaks[0][product]" class="form-control"></td>
  <td><input type="number" name="breaks[0][quantity]" class="form-control quantity" step="any"></td>
  <td><input type="number" name="breaks[0][total]" class="form-control" onchange="calcularTotales()" step="any"></td>
  <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
</tr>

              
          </tbody>
        </table>
        <button type="button" class="btn btn-primary addRow" data-table="breaksTable">Agregar Rotura</button>
      </fieldset>

      <!-- Devoluciones Parciales -->
      <fieldset>
        <legend>Devoluciones Parciales</legend>
        <table class="table" id="partialReturnsTable">
          <thead>
            <tr>
              <th>PDV</th>
              <th>Producto</th>
              <th>Cantidad</th>
              <th>Importe por Devolución</th>
              <th>Motivo</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            <tr class="partial-return-row">
              <td>
                <select name="partialReturns[0][pdv]" id="partialReturns-pdv" class="select2">
                  {{#each clientes}}
                  <option value="{{this.displayName}}">
                    {{this.codigo}} - {{this.razonSocial}}
                  </option>
                  {{/each}}
                </select>
              </td>
              <td><input type="text" name="partialReturns[0][product]" class="form-control"></td>
              <td><input type="number" name="partialReturns[0][quantity]" class="form-control quantity" step="any"></td>
              <td><input type="number" name="partialReturns[0][total]" class="form-control"
                  onchange="calcularTotales()" step="any"></td>
              <td>
  <select name="partialReturns[0][motivo]" class="form-control">
    <option value="ELIGE EL MOTIVO">ELIGE EL MOTIVO</option>
    <option value="23 - MAL FACTURADO">23 - MAL FACTURADO</option>
    <option value="28- SIN ENVASES">28- SIN ENVASES</option>
    <option value="24- SIN DINERO">24- SIN DINERO</option>
    <option value="32-PROBLEMA COMERCIAL">32-PROBLEMA COMERCIAL</option>
    <option value="5- PEDIDO ERRONEO (PARCIAL)">5- PEDIDO ERRONEO - PARCIAL</option>
    <option value="33- PEDIDO DUPLICADO">33- PEDIDO DUPLICADO</option>
      <option value="4- NO REALIZO PEDIDO">4-NO REALIZO PEDIDO</option>
      <option value="19-CERRADO">19-CERRADO</option>
      <option value="29- ROTURA DEL CAMION SINIESTRO">29- ROTURA DEL CAMION SINIESTRO</option>
      <option value="21 - ERROR DE CARGA">21 - ERROR DE CARGA </option>
      <option value="2 - ERROR DE DESCARGA ENTREGA">2 - ERROR DE DESCARGA ENTREGA </option>
      <option value="26 - MAL GEOCODIFICADO">26 - MAL GEOCODIFICADO </option>
       <option value="10 - SIN STOCK">10 - SIN STOCK </option>
       <option value="27 - PRODUCTO NO APTO">27 - PRODUCTO NO APTO </option>
       <option value="22 - HORARIO FLETERO- SINDICAL">22 - HORARIO FLETERO- SINDICAL </option>
       <option value="20 - CAMINO INTRANSITABLE - ZONA PE">20 - CAMINO INTRANSITABLE - ZONA PE </option>
       <option value="25 - FECHA CORTA ">25 - FECHA CORTA </option>
       <option value="31 - FALTANTE BOTELLA ">31 - FALTANTE BOTELLA </option>
    
    
    
  </select>
</td>

              <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
            </tr>
          </tbody>
        </table>
        <button type="button" class="btn btn-primary addRow" data-table="partialReturnsTable">Agregar Devolución
          Parcial</button>
      </fieldset>

      <!-- Devoluciones Totales -->
      <fieldset>
        <legend>Devoluciones Totales</legend>
        <table class="table" id="totalReturnsTable">
          <thead>
            <tr>
              <th>PDV</th>

              <th>Motivo</th>
              <th>Importe por Devolución</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            <tr class="total-return-row">
              <td>
                <select name="totalReturns[0][pdv]" id="totalReturns-pdv" class="select2">
                  {{#each clientes}}
                  <option value="{{this.displayName}}">
                    {{this.codigo}} - {{this.razonSocial}}
                  </option>
                  {{/each}}
                </select>
              </td>
             <td>
  <select name="totalReturns[0][motivo]" class="form-control">
    <option value="ELIGE EL MOTIVO">ELIGE EL MOTIVO</option>
    <option value="MAL FACTURADO">1- MAL FACTURADO</option>
    <option value="PEDIDO DUPLICADO">2- PEDIDO DUPLICADO</option>
    <option value="NO PEDIDO">3- NO PEDIDO</option>
<option value="ELIGE EL MOTIVO">ELIGE EL MOTIVO</option>
    <option value="23 - MAL FACTURADO">23 - MAL FACTURADO</option>
    <option value="28- SIN ENVASES">28- SIN ENVASES</option>
    <option value="24- SIN DINERO">24- SIN DINERO</option>
    <option value="32-PROBLEMA COMERCIAL">32-PROBLEMA COMERCIAL</option>
    <option value="5- PEDIDO ERRONEO (PARCIAL)">5- PEDIDO ERRONEO - PARCIAL</option>
    <option value="33- PEDIDO DUPLICADO">33- PEDIDO DUPLICADO</option>
      <option value="4- NO REALIZO PEDIDO">4-NO REALIZO PEDIDO</option>
      <option value="19-CERRADO">19-CERRADO</option>
      <option value="29- ROTURA DEL CAMION SINIESTRO">29- ROTURA DEL CAMION SINIESTRO</option>
      <option value="21 - ERROR DE CARGA">21 - ERROR DE CARGA </option>
      <option value="2 - ERROR DE DESCARGA ENTREGA">2 - ERROR DE DESCARGA ENTREGA </option>
      <option value="26 - MAL GEOCODIFICADO">26 - MAL GEOCODIFICADO </option>
       <option value="10 - SIN STOCK">10 - SIN STOCK </option>
       <option value="27 - PRODUCTO NO APTO">27 - PRODUCTO NO APTO </option>
       <option value="22 - HORARIO FLETERO- SINDICAL">22 - HORARIO FLETERO- SINDICAL </option>
       <option value="20 - CAMINO INTRANSITABLE - ZONA PE">20 - CAMINO INTRANSITABLE - ZONA PE </option>
       <option value="25 - FECHA CORTA ">25 - FECHA CORTA </option>
       <option value="31 - FALTANTE BOTELLA ">31 - FALTANTE BOTELLA </option>
  </select>
</td>

              
              <td><input type="number" name="totalReturns[0][total]" class="form-control" onchange="calcularTotales()" step="any">
              </td>
              <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
            </tr>
          </tbody>
        </table>
        <button type="button" class="btn btn-primary addRow" data-table="totalReturnsTable">Agregar Devolución
          Total</button>
      </fieldset>

      <!-- Saldo a favor -->
      <fieldset>
        <legend>Cambios No realizados</legend>
        <table class="table" id="saldoTable">
          <thead>
            <tr>
              <th>PDV</th>
              <th>Importe a favor</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            <tr class="saldo-row">
              <td>
                <select name="saldo[0][pdv]" id="saldo-pdv" class="select2">
                  {{#each clientes}}
                  <option value="{{this.displayName}}">
                    {{this.codigo}} - {{this.razonSocial}}
                  </option>
                  {{/each}}
                </select>
              </td>
              <td><input type="number" name="saldo[0][total]" class="form-control" onchange="calcularTotales()" step="any">
              </td>
              <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
            </tr>
          </tbody>
        </table>
        <button type="button" class="btn btn-primary addRow" data-table="saldoTable">Agregar cambio no realizado</button>
      </fieldset>

    <fieldset>
  <legend>Factura Cuenta Corriente</legend>
  <table class="table" id="facturaCuentaCorrienteTable">
    <thead>
      <tr>
        <th>PDV</th>
        <th>Importe</th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody>
      <tr class="factura-cuenta-corriente-row">
        <td>
          <select name="facturaCuentaCorriente[0][pdv]" id="factura-cuenta-corriente-pdv" class="select2">
            {{#each clientes}}
            <option value="{{this.displayName}}">
              {{this.codigo}} - {{this.razonSocial}}
            </option>
            {{/each}}
          </select>
        </td>
        <td><input type="number" name="facturaCuentaCorriente[0][total]" class="form-control" onchange="calcularTotales()" step="any"></td>
        <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
      </tr>
    </tbody>
  </table>
  <button type="button" class="btn btn-primary addRow" data-table="facturaCuentaCorrienteTable">Agregar Factura Cuenta Corriente</button>
</fieldset>


      <!-- Cheques -->
      <fieldset>
        <legend>Cheques</legend>
        <table class="table" id="chequesTable">
          <thead>
            <tr>
              <th>PDV</th>
              <th>Fecha del Cheque</th>
              <th>Número</th>
              <th>Importe</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            <tr class="cheque-row">
              <td>
                <select name="cheques[0][pdv]" id="cheques-pdv" class="select2">
                  {{#each clientes}}
                  <option value="{{this.displayName}}">
                    {{this.codigo}} - {{this.razonSocial}}
                  </option>
                  {{/each}}
                </select>
              </td>
              <td><input type="date" name="cheques[0][date]" class="form-control"></td>
              <td><input type="text" name="cheques[0][num]" class="form-control"></td>
              <td><input type="number" name="cheques[0][total]" class="form-control" onchange="calcularTotales()" step="any"></td>
              <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
            </tr>
          </tbody>
        </table>
        <button type="button" class="btn btn-primary addRow" data-table="chequesTable">Agregar Cheque</button>
      </fieldset>

      <!-- Transferencias -->
      <fieldset>
        <legend>Transferencias</legend>
        <table class="table" id="transfersTable">
          <thead>
            <tr>
              <th>PDV</th>
              <th>Importe</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            <tr class="transfer-row">

              <td>
                <select name="transfers[0][pdv]" id="transfers-pdv" class="select2">
                  {{#each clientes}}
                  <option value="{{this.displayName}}">
                    {{this.codigo}} - {{this.razonSocial}}
                  </option>
                  {{/each}}
                </select>
              </td>


              <td><input type="number" name="transfers[0][total]" class="form-control" onchange="calcularTotales()" step="any">
              </td>
              <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
            </tr>
          </tbody>
        </table>
        <button type="button" class="btn btn-primary addRow" data-table="transfersTable">Agregar Transferencia</button>
      </fieldset>

      <!-- Billetes -->
     <fieldset>
    <legend>Billetes</legend>
    <table class="table" id="billsTable">
        <thead>
            <tr>
                <th>Billete</th>
                <th>Cantidad</th>
                <th>Importe por Billete</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            <tr class="bill-row">
                <td>
                    <select name="bills[0][bill]" class="form-control bill-value" onchange="calcularTotalPorBillete(this)">
                        <option value="">Seleccione el billete</option>
                        <option value="20000">20000</option>
                        <option value="10000">10000</option>
                        <option value="2000">2000</option>
                        <option value="1000">1000</option>
                        <option value="500">500</option>
                        <option value="200">200</option>
                        <option value="100">100</option>
                        <option value="50">50</option>
                        <option value="20">20</option>
                        <option value="10">10</option>
                    </select>
                </td>
                <td><input type="number" name="bills[0][quantity]" class="form-control quantity" onchange="calcularTotalPorBillete(this)"></td>
                <td><input type="number" name="bills[0][total]" class="form-control" readonly></td>
                <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
            </tr>
        </tbody>
    </table>
    <button type="button" class="btn btn-primary addRow" data-table="billsTable">Agregar Billete</button>
</fieldset>


<fieldset>
    <legend>Gastos</legend>
    <table class="table" id="gastosTable">
        <thead>
            <tr>
                <th>Motivo</th>
                <th>Importe</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            <tr class="gastos-row">
                <td>
                    <input type="text" name="gastos[0][motivo]" class="form-control" onchange="calcularTotales()">
                </td>
                <td>
                    <input type="number" name="gastos[0][total]" class="form-control" onchange="calcularTotales()" step="any">
                </td>
                <td><button type="button" class="btn btn-danger delete-row">Eliminar</button></td>
            </tr>
        </tbody>
    </table>
    <button type="button" class="btn btn-primary addRow" data-table="gastosTable">Agregar gasto</button>
</fieldset>

<div class="form-group">
  <label for="comentarios">Comentarios:</label>
  <textarea class="form-control" id="comentarios" name="comentarios" rows="4" placeholder="Escribe tus comentarios aquí..."></textarea>
</div>

      <button type="submit" class="btn btn-success mt-4">Generar PDF</button>
    </form>
  </div>
  
  <script>
  let filaIndex = 1; // Para controlar el índice de las filas

  $(document).on('click', '.addRow', function () {
    const table = $(this).data('table');
    const row = $('#' + table + ' tbody tr:first').clone(); // Clonamos la primera fila

    // Actualizamos los índices y limpiamos los valores
    row.find('input, select').each(function () {
      const name = $(this).attr('name');
      $(this).attr('name', name.replace(/\[\d+\]/, `[${filaIndex}]`)); // Actualizamos el índice
      $(this).val(''); // Limpiamos los valores
    });

    // Reiniciamos el precio y total
    row.find('.price').val('');
    row.find('.total').val('');

    // Agregamos la nueva fila
    $('#' + table + ' tbody').append(row);

    // Inicializamos Select2 en los nuevos select
    row.find('.select2').select2();

    filaIndex++; // Incrementamos el índice
  });

  // Evento para actualizar el precio cuando se cambia el producto
  $(document).on('change', '.product', function () {
    let row = $(this).closest('tr');
    let price = $(this).find('option:selected').data('price');
    row.find('.price').val(price);
    updateTotal(row);
  });

  // Evento para actualizar el total cuando se cambia la cantidad
  $(document).on('input', '.quantity', function () {
    let row = $(this).closest('tr');
    updateTotal(row);
  });

  // Función para actualizar el total (precio * cantidad)
  function updateTotal(row) {
    let price = parseFloat(row.find('.price').val()) || 0;
    let quantity = parseFloat(row.find('.quantity').val()) || 0;
    row.find('.total').val(price * quantity);
  }

  // Evento para eliminar una fila específica
  $(document).on('click', '.delete-row', function () {
    if ($('#envasesTable tbody tr').length > 1) {
      $(this).closest('tr').remove();
    }
  });

  // Función para eliminar filas de las tablas
  $(document).on('click', '.delete-row', function () {
    $(this).closest('tr').remove();
    calcularTotales();
    calcularTotalValores();
  });

  // Funciones para calcular los totales por cada tipo de entrada (billetes, devoluciones, etc.)
  function calcularTotalPorBillete(element) {
    let row = $(element).closest('tr');
    let quantity = row.find('.quantity').val();
    let billValue = row.find('.bill-value').val();
    let total = quantity * billValue;
    row.find('input[name$="[total]"]').val(total);
    calcularTotales();
    calcularTotalValores();
  }

  // Función para calcular total por transferencia
  function calcularTotalPorTransferencia(inputElement) {
    const row = inputElement.closest('tr');
    const quantity = row.querySelector('.quantity').value;
    const totalInput = row.querySelector('input[name$="[total]"]');
    totalInput.value = quantity;
    calcularTotales();
  }

function calcularTotalEnvase(element) {
    let row = $(element).closest('tr');
    let quantity = row.find('.quantity').val();
    let productPrice = row.find('input[name$="[total]"]').data('price'); // Asumiendo que tienes un precio por producto
    let total = quantity * productPrice;
    row.find('input[name$="[total]"]').val(total);
    calcularTotales();
}

 // Calcula el total (precio * cantidad)
  function calcularTotalPorProducto(element) {
    let row = $(element).closest('tr'); // Obtiene la fila actual
    let quantity = parseFloat(row.find('input[name$="[quantity]"]').val()) || 0;
    let price = parseFloat(row.find('input[name$="[price]"]').val()) || 0;
    let total = quantity * price;

    row.find('input[name$="[total]"]').val(total); // Actualiza el total en la fila
  }

// Escuchamos el evento de cambio en el campo totalManual
$('input[name="totalManual"]').on('input', function() {
    // Llamamos a calcularTotales cada vez que se modifica el valor del campo
    calcularTotales();
    calcularTotalValores(); // Llamamos a la nueva función para "Total valores"
});

function calcularTotales() {
    // Obtenemos el valor del campo con name="totalManual" y lo asignamos a total
    let total = parseFloat($('input[name="totalManual"]').val()) || 0;

    // Iteramos sobre cada campo de "total"
    $('input[name$="[total]"]').each(function () {
        let value = parseFloat($(this).val()) || 0;

        // Excluimos los campos que contienen "bills", "transfers" o "cheques"
        if ($(this).attr('name').includes('bills') || $(this).attr('name').includes('transfers') || $(this).attr('name').includes('cheques')) {
            return; // Si es uno de esos, simplemente salimos de esta iteración sin hacer nada
        }

        // Verificamos si el campo es un "gasto", "totalReturns", "partialReturns" o "nuevoCampo"
        if ($(this).attr('name').includes('gastos')) {
            total -= value; // Restar si es un gasto
            return; // Salir de la iteración actual
        } else if ($(this).attr('name').includes('totalReturns')) {
            total -= value; // Restar si es "totalReturns"
            return; // Salir de la iteración actual
        } else if ($(this).attr('name').includes('partialReturns')) {
            total -= value; // Restar si es "partialReturns"
            return; // Salir de la iteración actual
        } else if ($(this).attr('name').includes('breaks')) {
            total -= value; // Restar si es "breaks"
            return; // Salir de la iteración actual
        } else if ($(this).attr('name').includes('facturaCuentaCorriente')){
          total -= value; // Restar si es "breaks"
            return; // Salir de la iteración actual
        }
        else {
            total += value; // Sumar si no es un gasto ni un rechazo
        }
    });

    // Actualizamos el total calculado en el campo #total
    $('#total').val(total);

    // Llamamos a la función para calcular la diferencia si es necesario
    calcularDiferencia();
}

// Función para calcular el total de valores
function calcularTotalValores() {
    let totalValores = 0;

    // Iteramos sobre los campos de total específicos
    $('input[name$="[total]"]').each(function () {
        let value = parseFloat($(this).val()) || 0;

        // Sumamos solo si el name contiene "bills", "transfers" o "cheques"
        if ($(this).attr('name').includes('bills')) {
            totalValores += value;
        } else if ($(this).attr('name').includes('transfers')) {
            totalValores += value;
        } else if ($(this).attr('name').includes('cheques')) {
            totalValores += value;
        }
    });

    // Actualizamos el "Total valores" en el campo correspondiente
    $('#totalValores').val(totalValores);

    // Llamamos a calcularDiferencia() para actualizarla también
    calcularDiferencia();
}
function actualizarTotalBills() {
    let totalBills = 0;

    // Iterar sobre cada fila de billetes en la tabla
    $('#billsTable tbody tr').each(function () {
        // Obtener el valor del billete seleccionado
        let billValue = parseFloat($(this).find('select[name*="bills"][name$="[bill]"]').val()) || 0;
        
        // Obtener la cantidad del billete
        let quantity = parseFloat($(this).find('input[name*="bills"][name$="[quantity]"]').val()) || 0;

        // Calcular el total por billete
        let totalPorBillete = billValue * quantity;

        // Asignar el total por billete al campo correspondiente
        $(this).find('input[name*="bills"][name$="[total]"]').val(totalPorBillete);

        // Sumar el total de todos los billetes
        totalBills += totalPorBillete;
    });

    // Actualizar el total de todos los billetes en el campo correspondiente
    $('#totalBills').val(totalBills); // Asegúrate de que el id del campo sea correcto
}
$(document).on('input', 'input[name$="[quantity]"], input[name*="transfers"], input[name*="cheques"]', function () {
    // Verificar si el campo tiene "quantity" y llamar a actualizarTotalBills
    if ($(this).attr('name').includes('quantity')) {
        actualizarTotalBills(); // Recalcula el total de bills
    } else if ($(this).attr('name').includes('transfers') || $(this).attr('name').includes('cheques')) {
        calcularTotalValores(); // Recalcula el total de valores
    }
});








function calcularDiferencia() {
    // Obtenemos el valor de Total a Rendir
    let total = parseFloat($('#total').val()) || 0;

    // Obtenemos el valor de Total Valores
    let totalValores = parseFloat($('#totalValores').val()) || 0;

    // Calculamos la diferencia
    $('#diferencia').val( totalValores-total); // Mostramos la diferencia
}

  // Agregar un evento de cambio en todos los inputs de las tablas
  document.addEventListener('input', function (e) {
    // Verifica si el input pertenece a las tablas que necesitan ser actualizadas
    if (e.target.matches('.quantity, .total')) {
      calcularTotales();
    }
  });

  function updatePrice(rowIndex) {
    var productSelect = document.querySelector(`select[name="envases[${rowIndex}][product]"]`);
    var priceInput = document.querySelector(`input[name="envases[${rowIndex}][price]"]`);

    // Obtén el precio del producto seleccionado
    var selectedOption = productSelect.options[productSelect.selectedIndex];
    var price = selectedOption.getAttribute('data-price');

    // Actualiza el campo de precio
    priceInput.value = price;

    // Actualiza el total
    updateTotal(rowIndex);
  }

 
</script>



</body>

</html>